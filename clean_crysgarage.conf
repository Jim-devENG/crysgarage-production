server {
    listen 443 ssl;
    server_name crysgarage.studio;

    client_max_body_size 200M;

    root /opt/crysgarage/crysgarage-frontend/dist;
    index index.html;

    ssl_certificate /etc/letsencrypt/live/crysgarage.studio/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/crysgarage.studio/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        try_files $uri $uri/ /index.html;
    }

    # Serve mastered files written by backend at Laravel storage path
    # Map public /files/* URL to local storage directory
    location /files/ {
        alias /opt/crysgarage/crysgarage-backend-fresh/storage/app/public/mastered/;
        add_header Cache-Control "public, max-age=31536000";
        add_header Accept-Ranges bytes;
        # Ensure correct content types for audio
        types {
            audio/wav  wav;
            audio/x-wav wav;
            audio/mpeg mp3;
        }
        try_files $uri =404;
    }

    # Backward-compat: serve legacy Laravel path used by older links
    location /storage/mastered/ {
        alias /opt/crysgarage/crysgarage-backend-fresh/storage/app/public/mastered/;
        add_header Cache-Control "public, max-age=31536000";
        add_header Accept-Ranges bytes;
        types {
            audio/wav  wav;
            audio/x-wav wav;
            audio/mpeg mp3;
        }
        try_files $uri =404;
    }

    location ~ ^/(docs|redoc|openapi\.json|health|tiers|genres|master|master-advanced|preview|formats|analyze-file|analyze-file-advanced|analyze-upload|analyze-final|analyze-ml|proxy-download|storage-stats|genre-presets|upload-file)/? {
        proxy_pass http://127.0.0.1:8002;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300;
    }
}

server {
    listen 80;
    server_name crysgarage.studio;
    return 301 https://$host$request_uri;
}


