name: Fast Deploy to VPS

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install essential tools
        run: |
          # Update package lists
          sudo apt-get update || echo "apt-get update failed, continuing..."
          
          # Install essential packages
          sudo apt-get install -y bash coreutils openssh-client git curl || echo "Package installation failed, continuing..."
          
          # Verify bash is available
          which bash || echo "bash not found in PATH"
          /bin/bash --version || echo "bash version check failed"
          
          # Verify coreutils
          which ls || echo "ls not found in PATH"
          /bin/ls --version || echo "ls version check failed"
          
          echo "Essential tools installation completed"

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "Setting up SSH key..."
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "SSH key file created, checking format..."
          ssh-keygen -l -f ~/.ssh/id_rsa || echo "Key format issue detected"
          echo "Adding VPS to known hosts..."
          ssh-keyscan -H 209.74.80.162 >> ~/.ssh/known_hosts
          echo "SSH setup completed"
        shell: bash

      - name: Test SSH connection
        run: |
          echo "Testing SSH connection..."
          ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@209.74.80.162 "echo 'SSH connection test successful'"
          echo "SSH connection test completed"
        shell: bash

      - name: Check VPS directory structure
        run: |
          echo "Checking VPS directory structure..."
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@209.74.80.162 << 'EOF'
            echo "=== VPS Directory Check ==="
            echo "Current user: $(whoami)"
            echo "Current directory: $(pwd)"
            echo "Home directory: $HOME"
            echo "Root directory contents:"
            ls -la /root/
            echo "Checking for crysgarage-deploy:"
            if [ -d "/root/crysgarage-deploy" ]; then
              echo "✅ /root/crysgarage-deploy exists"
              ls -la /root/crysgarage-deploy/
            else
              echo "❌ /root/crysgarage-deploy does not exist"
              echo "Available directories in /root/:"
              ls -la /root/ | grep "^d"
            fi
          EOF
        shell: bash

      - name: Deploy to VPS
        run: |
          echo "Starting deployment to VPS..."
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@209.74.80.162 << 'EOF'
            set -e  # Exit on any error
            echo "🚀 Starting fast deployment via GitHub Actions..."
            
            # Navigate to project directory
            cd /root/crysgarage-deploy
            echo "📁 Current directory: $(pwd)"
            
            # Pull latest changes
            echo "📥 Pulling latest changes..."
            git pull origin master
            
            # Frontend: Build and deploy
            echo "🌐 Building frontend..."
            cd crysgarage-frontend
            npm ci
            npm run build
            
            # Copy built files to web root
            echo "📁 Copying files to web root..."
            rm -rf /var/www/html/*
            cp -r dist/* /var/www/html/
            restorecon -Rv /var/www/html
            
            # Backend: Update and restart
            echo "🔧 Updating backend..."
            cd ../crysgarage-backend
            composer install --no-dev --optimize-autoloader
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            systemctl restart crysgarage-backend
            
            # Ruby service: Update and restart
            echo "💎 Updating Ruby service..."
            cd ../crysgarage-ruby
            gem install bundler:2.6.7 || echo "Bundler version issue - continuing..."
            bundle install
            systemctl restart crysgarage-ruby
            
            # Reload Nginx
            echo "🌐 Reloading Nginx..."
            nginx -t && systemctl reload nginx
            
            # Health check
            echo "🏥 Running health check..."
            sleep 5
            curl -f https://crysgarage.studio || echo "Health check failed but deployment completed"
            
            echo "✅ Fast deployment completed successfully!"
          EOF
        shell: bash 