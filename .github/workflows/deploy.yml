name: Deploy to VPS

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: crysgarage-frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: |
        cd crysgarage-frontend
        npm ci
        
    - name: Build frontend
      run: |
        cd crysgarage-frontend
        npm run build
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        script: |
          # Update repository
          cd /opt/crysgarage
          sudo -u crysgarage git pull origin master
          
          # Update Python dependencies if needed
          cd /opt/crysgarage/audio-mastering-service
          source .venv/bin/activate
          pip install -r requirements.txt 2>/dev/null || true
          deactivate
          
          # Restart services
          sudo systemctl restart crysgarage-python.service
          sudo systemctl restart nginx
          
          echo "Deployment completed successfully!"
          
    - name: Upload frontend to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        source: "crysgarage-frontend/dist/*"
        target: "/opt/crysgarage/crysgarage-frontend/dist/"
        strip_components: 2
        
    - name: Restart Nginx
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        script: |
          sudo systemctl restart nginx
          echo "Frontend updated and Nginx restarted!"