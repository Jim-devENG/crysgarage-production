name: Deploy Frontend and Backend to VPS

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: crysgarage-frontend/package-lock.json

      - name: Install dependencies
        working-directory: crysgarage-frontend
        run: npm ci --no-audit --no-fund

      - name: Build frontend
        working-directory: crysgarage-frontend
        run: npm run build

      - name: Write deployment version file
        run: |
          echo "commit_sha=${{ github.sha }}" > frontend_version.txt
          echo "ref_name=${GITHUB_REF_NAME:-unknown}" >> frontend_version.txt
          echo "deployed_at=$(date -u +%FT%TZ)" >> frontend_version.txt

      - name: Upload frontend to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "crysgarage-frontend/dist/*"
          target: "/var/www/frontend_publish/"
          overwrite: true
          strip_components: 1

      - name: Upload version file to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "frontend_version.txt"
          target: "/var/www/frontend_publish/version.txt"
          overwrite: true

      - name: Restart nginx service
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "Restarting nginx container..."
            docker restart nginx-ssl || docker restart nginx-static || true
            echo "Frontend deployment completed successfully!"

      - name: Verify deployment
        run: |
          echo "Verifying homepage..."
          curl -fsS https://crysgarage.studio/ | head -n 5
          echo "Homepage verified."
          
          echo "Verifying version file..."
          curl -fsS https://crysgarage.studio/version.txt || echo "Version file not accessible"