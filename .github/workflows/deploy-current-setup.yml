name: Deploy to Current VPS Setup

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install essential tools
      run: |
        sudo apt-get update || echo "apt-get update failed, continuing..."
        sudo apt-get install -y bash coreutils openssh-client git curl || echo "Package installation failed, continuing..."
        echo "Essential tools installation completed"

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "Setting up SSH key..."
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "SSH key file created, checking format..."
        ssh-keygen -l -f ~/.ssh/id_rsa || echo "Key format issue detected"
        echo "Adding VPS to known hosts..."
        ssh-keyscan -H 209.74.80.162 >> ~/.ssh/known_hosts
        echo "SSH setup completed"
      shell: bash

    - name: Test SSH connection
      run: |
        echo "Testing SSH connection..."
        ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@209.74.80.162 "echo 'SSH connection test successful'"
        echo "SSH connection test completed"
      shell: bash

    - name: Deploy to VPS
      run: |
        echo "Starting deployment to VPS..."
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@209.74.80.162 << 'EOF'
          # Set proper PATH
          export PATH="/usr/local/ruby-3.1.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
          
          set -e  # Exit on any error
          echo "🚀 Starting deployment to current VPS setup..."
          
          # Navigate to deployment directory
          cd /var/www/crysgarage-deploy
          echo "📁 Current directory: $(pwd)"
          
          # Pull latest changes
          echo "📥 Pulling latest changes..."
          git pull origin master
          
          # Build frontend
          echo "🌐 Building frontend..."
          cd crysgarage-frontend
          npm ci
          npm run build
          
          # The built files are now in dist/ and will be served by Nginx
          # from /var/www/crysgarage-deploy/crysgarage-frontend/dist/
          echo "✅ Frontend built successfully"
          
          # Update backend if needed
          echo "🔧 Updating backend..."
          cd ../crysgarage-backend-fresh
          # Backend is already in place, just ensure permissions
          chown -R nginx:nginx /var/www/crysgarage-deploy/crysgarage-backend-fresh
          chmod -R 755 /var/www/crysgarage-deploy/crysgarage-backend-fresh
          
          # Set proper permissions for frontend
          chown -R nginx:nginx /var/www/crysgarage-deploy/crysgarage-frontend/dist
          chmod -R 755 /var/www/crysgarage-deploy/crysgarage-frontend/dist
          
          # Restart services
          echo "🔄 Restarting services..."
          systemctl restart php-fpm
          systemctl reload nginx
          
          # Health check
          echo "🏥 Running health check..."
          sleep 5
          curl -f https://crysgarage.studio || echo "Main site health check failed but deployment completed"
          
          echo "✅ Deployment completed at $(date)"
          echo "🌐 Website should now be accessible at https://crysgarage.studio"
        EOF
      shell: bash