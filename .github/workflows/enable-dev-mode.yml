name: Enable Dev Mode

on:
  workflow_dispatch:
    inputs:
      email:
        description: Dev email
        required: true
        default: dev@crysgarage.studio
      password:
        description: Dev password
        required: true
        default: "TheCrysgarage(100%)"

jobs:
  enable:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Apply DEV_MODE credentials and reload services
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          DEV_EMAIL: ${{ github.event.inputs.email }}
          DEV_PASSWORD: ${{ github.event.inputs.password }}
        run: |
          ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} bash -lc '
            set -e
            cd /var/www/crysgarage-deploy/crysgarage-backend/laravel
            # Clean any prior bad lines and existing creds
            sed -i "/^-NoNewline/d" .env || true
            sed -i "/^DEV_MODE_EMAIL=/d" .env || true
            sed -i "/^DEV_MODE_PASSWORD=/d" .env || true
            # Append new creds (quote password safely)
            printf "%s\n" "DEV_MODE_EMAIL=${DEV_EMAIL}" >> .env
            printf "%s\n" "DEV_MODE_PASSWORD='${DEV_PASSWORD}'" >> .env
            # Clear Laravel caches
            php artisan config:clear
            php artisan cache:clear
            # Reload services
            (systemctl reload php-fpm || systemctl reload php8.1-fpm) || true
            # Reload Nginx to apply dev mode headers
            if ! nginx -t; then
              echo "nginx config test failed";
              nginx -t 2>&1 | tail -n 50;
              exit 1;
            fi
            if ! nginx -s reload; then
              echo "nginx reload failed - showing status and logs";
              systemctl status nginx --no-pager | cat || true;
              journalctl -u nginx --no-pager -n 100 | cat || true;
              exit 1;
            fi
          '


