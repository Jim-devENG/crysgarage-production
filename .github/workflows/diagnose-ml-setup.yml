name: Diagnose ML Pipeline Setup

on:
  workflow_dispatch:

jobs:
  diagnose-ml-setup:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Diagnose ML Pipeline Status
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: 209.74.80.162
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "üîç DIAGNOSING ML PIPELINE SETUP..."
          echo "=================================="
          
          # Check system services
          echo "üìä System Services Status:"
          echo "Redis: $(systemctl is-active redis)"
          echo "ML Service: $(systemctl is-active crysgarage-ml)"
          echo "Horizon: $(systemctl is-active crysgarage-horizon)"
          echo "Nginx: $(systemctl is-active nginx)"
          echo "PHP-FPM: $(systemctl is-active php-fpm)"
          echo ""
          
          # Check Redis connection
          echo "üîç Testing Redis connection:"
          if redis-cli ping | grep -q "PONG"; then
            echo "‚úÖ Redis: WORKING"
          else
            echo "‚ùå Redis: FAILED"
          fi
          echo ""
          
          # Check ML service
          echo "üîç Testing ML service:"
          if curl -f -s http://localhost:8001/health > /dev/null; then
            echo "‚úÖ ML Service: RESPONDING"
            curl -s http://localhost:8001/health | head -5
          else
            echo "‚ùå ML Service: NOT RESPONDING"
            echo "Checking ML service logs:"
            journalctl -u crysgarage-ml --no-pager -l | tail -10
          fi
          echo ""
          
          # Check Horizon
          echo "üîç Checking Horizon status:"
          if systemctl is-active --quiet crysgarage-horizon; then
            echo "‚úÖ Horizon Service: RUNNING"
            echo "Checking Horizon logs:"
            journalctl -u crysgarage-horizon --no-pager -l | tail -10
          else
            echo "‚ùå Horizon Service: NOT RUNNING"
            echo "Checking Horizon logs:"
            journalctl -u crysgarage-horizon --no-pager -l | tail -10
          fi
          echo ""
          
          # Check Laravel configuration
          echo "üîç Checking Laravel configuration:"
          cd /var/www/html/api
          echo "Current directory: $(pwd)"
          echo "Laravel version: $(php artisan --version)"
          echo ""
          
          # Check environment variables
          echo "üîç Checking environment variables:"
          if [ -f .env ]; then
            echo "‚úÖ .env file exists"
            echo "ML_SERVICE_URL: $(grep ML_SERVICE_URL .env || echo 'NOT SET')"
            echo "QUEUE_CONNECTION: $(grep QUEUE_CONNECTION .env || echo 'NOT SET')"
            echo "FFMPEG_PATH: $(grep FFMPEG_PATH .env || echo 'NOT SET')"
          else
            echo "‚ùå .env file not found"
          fi
          echo ""
          
          # Check database migrations
          echo "üîç Checking database migrations:"
          php artisan migrate:status | tail -10
          echo ""
          
          # Check Horizon installation
          echo "üîç Checking Horizon installation:"
          if composer show laravel/horizon > /dev/null 2>&1; then
            echo "‚úÖ Laravel Horizon: INSTALLED"
            composer show laravel/horizon
          else
            echo "‚ùå Laravel Horizon: NOT INSTALLED"
          fi
          echo ""
          
          # Check if Horizon routes are published
          echo "üîç Checking Horizon routes:"
          if [ -f routes/horizon.php ]; then
            echo "‚úÖ Horizon routes: PUBLISHED"
          else
            echo "‚ùå Horizon routes: NOT PUBLISHED"
          fi
          echo ""
          
          # Check ports
          echo "üîç Checking open ports:"
          netstat -tlnp | grep -E ':(6379|8001|8000|80|443)' || echo "No relevant ports found"
          echo ""
          
          # Check file permissions
          echo "üîç Checking file permissions:"
          ls -la /var/www/html/api/ | head -5
          echo ""
          
          # Check if ML service files exist
          echo "üîç Checking ML service files:"
          if [ -d ml-service ]; then
            echo "‚úÖ ML service directory exists"
            ls -la ml-service/
          else
            echo "‚ùå ML service directory not found"
          fi
          echo ""
          
          # Try to restart services
          echo "üîÑ Attempting to restart services..."
          systemctl restart redis
          systemctl restart crysgarage-ml
          systemctl restart crysgarage-horizon
          sleep 5
          
          echo "üìä Final Status After Restart:"
          echo "Redis: $(systemctl is-active redis)"
          echo "ML Service: $(systemctl is-active crysgarage-ml)"
          echo "Horizon: $(systemctl is-active crysgarage-horizon)"
          echo ""
          
          echo "üéØ DIAGNOSIS COMPLETE!"
          echo "Check the output above to identify any issues."
