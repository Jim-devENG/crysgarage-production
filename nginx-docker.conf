events {
    worker_connections 1024;
}

http {
    # Use container names instead of IP addresses for better reliability
    upstream frontend {
        server frontend:80;
    }

    upstream backend {
        server backend:8000;
    }

    upstream ruby-service {
        server ruby-service:4567;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name crysgarage.studio www.crysgarage.studio;
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name crysgarage.studio www.crysgarage.studio;

        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/crysgarage.studio/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/crysgarage.studio/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Frontend - with better error handling and cache busting
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
            proxy_connect_timeout 60;
            proxy_send_timeout 60;
            
            # Cache busting headers
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            
            # Handle frontend errors gracefully
            proxy_intercept_errors on;
            error_page 502 503 504 = @fallback;
        }

        # Fallback for frontend errors
        location @fallback {
            return 503 "Service temporarily unavailable. Please try again in a moment.";
        }

        # Backend API
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 60;
            proxy_send_timeout 60;
        }

        # Ruby service
        location /ruby/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://ruby-service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 60;
            proxy_send_timeout 60;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Default server block for unmatched requests
    server {
        listen 80 default_server;
        listen 443 ssl http2 default_server;
        server_name _;
        
        # SSL configuration for default server
        ssl_certificate /etc/letsencrypt/live/crysgarage.studio/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/crysgarage.studio/privkey.pem;
        
        # Redirect all unmatched requests to the main domain
        return 301 https://crysgarage.studio$request_uri;
    }
} 